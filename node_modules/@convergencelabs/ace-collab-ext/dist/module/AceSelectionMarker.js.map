{"version":3,"file":"AceSelectionMarker.js","sourceRoot":"","sources":["../../src/ts/AceSelectionMarker.ts"],"names":[],"mappings":"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","sourcesContent":["import {Ace} from \"ace-builds\";\n\nexport interface ISelectionBounds {\n  height?: number;\n  width?: number;\n  top?: number;\n  left?: number;\n  bottom?: number;\n  right?: number;\n}\n\nexport class AceSelectionMarker implements Ace.MarkerLike {\n  public range: Ace.Range;\n  public type: string;\n  public renderer?: Ace.MarkerRenderer;\n  public clazz: string;\n  public inFront: boolean;\n  public id: number;\n\n  private _session: Ace.EditSession;\n  private readonly _label: string;\n  private readonly _color: string;\n  private _ranges: Ace.Range[];\n  private readonly _selectionId: string;\n  private readonly _id: string;\n  private readonly _markerElement: HTMLDivElement;\n\n  constructor(session: Ace.EditSession, selectionId: string, label: string, color: string, ranges: Ace.Range[]) {\n    this._session = session;\n    this._label = label;\n    this._color = color;\n    this._ranges = ranges || [];\n    this._selectionId = selectionId;\n    this._id = null;\n    this._markerElement = document.createElement(\"div\");\n  }\n\n  public update(_: string[], markerLayer: any, session: Ace.EditSession, layerConfig: any): void {\n    while (this._markerElement.hasChildNodes()) {\n      this._markerElement.removeChild(this._markerElement.lastChild);\n    }\n\n    this._ranges.forEach((range) => {\n      this._renderRange(markerLayer, session, layerConfig, range);\n    });\n\n    this._markerElement.remove();\n    markerLayer.elt(\"remote-selection\", \"\");\n    const parentNode = markerLayer.element.childNodes[markerLayer.i - 1] || markerLayer.element.lastChild;\n    parentNode.appendChild(this._markerElement);\n  }\n\n  public setSelection(ranges: Ace.Range[]): void {\n    if (ranges === undefined || ranges === null) {\n      this._ranges = [];\n    } else if (ranges instanceof Array) {\n      this._ranges = ranges;\n    } else {\n      this._ranges = [ranges];\n    }\n\n    this._forceSessionUpdate();\n  }\n\n  public getLabel(): string {\n    return this._label;\n  }\n\n  public selectionId(): string {\n    return this._selectionId;\n  }\n\n  public markerId(): string {\n    return this._id;\n  }\n\n  private _renderLine(bounds: ISelectionBounds): void {\n    const div = document.createElement(\"div\");\n    div.className = \"ace-multi-selection\";\n    div.style.backgroundColor = this._color;\n\n    if (typeof bounds.height === \"number\") {\n      div.style.height = `${bounds.height}px`;\n    }\n\n    if (typeof bounds.width === \"number\") {\n      div.style.width = `${bounds.width}px`;\n    }\n\n    if (typeof bounds.top === \"number\") {\n      div.style.top = `${bounds.top}px`;\n    }\n\n    if (typeof bounds.left === \"number\") {\n      div.style.left = `${bounds.left}px`;\n    }\n\n    if (typeof bounds.bottom === \"number\") {\n      div.style.bottom = `${bounds.bottom}px`;\n    }\n\n    if (typeof bounds.right === \"number\") {\n      div.style.right = `${bounds.right}px`;\n    }\n\n    this._markerElement.append(div);\n  }\n\n  private _renderRange(markerLayer: any, session: Ace.EditSession, layerConfig: any, range: Ace.Range): void {\n    const screenRange: Ace.Range = range.toScreenRange(session);\n\n    let height: number = layerConfig.lineHeight;\n    let top: number = markerLayer.$getTop(screenRange.start.row, layerConfig);\n    let width: number = 0;\n    const right = 0;\n    const left: number = markerLayer.$padding + screenRange.start.column * layerConfig.characterWidth;\n\n    if (screenRange.isMultiLine()) {\n      // Render the start line\n      this._renderLine({height, right, top, left});\n\n      // from start of the last line to the selection end\n      top = markerLayer.$getTop(screenRange.end.row, layerConfig);\n      width = screenRange.end.column * layerConfig.characterWidth;\n      this._renderLine({height, width, top, left: markerLayer.$padding});\n\n      // all the complete lines\n      height = (screenRange.end.row - screenRange.start.row - 1) * layerConfig.lineHeight;\n      if (height < 0) {\n        return;\n      }\n      top = markerLayer.$getTop(screenRange.start.row + 1, layerConfig);\n      this._renderLine({height, right, top, left: markerLayer.$padding});\n    } else {\n      width = (range.end.column - range.start.column) * layerConfig.characterWidth;\n      this._renderLine({height, width, top, left});\n    }\n  }\n\n  private _forceSessionUpdate(): void {\n    (this._session as any)._signal(\"changeBackMarker\");\n  }\n}\n"]}