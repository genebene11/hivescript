{"version":3,"file":"ace-collab-ext.min.js","sources":["../../src/src/ts/AceSelectionMarker.ts","../../src/src/ts/AceMultiSelectionManager.ts","../../src/src/ts/AceCursorMarker.ts","../../src/src/ts/AceMultiCursorManager.ts","../../src/src/ts/AceRangeUtil.ts","../../src/src/ts/AceRadarViewIndicator.ts","../../src/src/ts/AceRadarView.ts","../../src/src/ts/AceViewportUtil.ts"],"sourcesContent":["import {Ace} from \"ace-builds\";\n\nexport interface ISelectionBounds {\n  height?: number;\n  width?: number;\n  top?: number;\n  left?: number;\n  bottom?: number;\n  right?: number;\n}\n\nexport class AceSelectionMarker implements Ace.MarkerLike {\n  public range: Ace.Range;\n  public type: string;\n  public renderer?: Ace.MarkerRenderer;\n  public clazz: string;\n  public inFront: boolean;\n  public id: number;\n\n  private _session: Ace.EditSession;\n  private readonly _label: string;\n  private readonly _color: string;\n  private _ranges: Ace.Range[];\n  private readonly _selectionId: string;\n  private readonly _id: string;\n  private readonly _markerElement: HTMLDivElement;\n\n  constructor(session: Ace.EditSession, selectionId: string, label: string, color: string, ranges: Ace.Range[]) {\n    this._session = session;\n    this._label = label;\n    this._color = color;\n    this._ranges = ranges || [];\n    this._selectionId = selectionId;\n    this._id = null;\n    this._markerElement = document.createElement(\"div\");\n  }\n\n  public update(_: string[], markerLayer: any, session: Ace.EditSession, layerConfig: any): void {\n    while (this._markerElement.hasChildNodes()) {\n      this._markerElement.removeChild(this._markerElement.lastChild);\n    }\n\n    this._ranges.forEach((range) => {\n      this._renderRange(markerLayer, session, layerConfig, range);\n    });\n\n    this._markerElement.remove();\n    markerLayer.elt(\"remote-selection\", \"\");\n    const parentNode = markerLayer.element.childNodes[markerLayer.i - 1] || markerLayer.element.lastChild;\n    parentNode.appendChild(this._markerElement);\n  }\n\n  public setSelection(ranges: Ace.Range[]): void {\n    if (ranges === undefined || ranges === null) {\n      this._ranges = [];\n    } else if (ranges instanceof Array) {\n      this._ranges = ranges;\n    } else {\n      this._ranges = [ranges];\n    }\n\n    this._forceSessionUpdate();\n  }\n\n  public getLabel(): string {\n    return this._label;\n  }\n\n  public selectionId(): string {\n    return this._selectionId;\n  }\n\n  public markerId(): string {\n    return this._id;\n  }\n\n  private _renderLine(bounds: ISelectionBounds): void {\n    const div = document.createElement(\"div\");\n    div.className = \"ace-multi-selection\";\n    div.style.backgroundColor = this._color;\n\n    if (typeof bounds.height === \"number\") {\n      div.style.height = `${bounds.height}px`;\n    }\n\n    if (typeof bounds.width === \"number\") {\n      div.style.width = `${bounds.width}px`;\n    }\n\n    if (typeof bounds.top === \"number\") {\n      div.style.top = `${bounds.top}px`;\n    }\n\n    if (typeof bounds.left === \"number\") {\n      div.style.left = `${bounds.left}px`;\n    }\n\n    if (typeof bounds.bottom === \"number\") {\n      div.style.bottom = `${bounds.bottom}px`;\n    }\n\n    if (typeof bounds.right === \"number\") {\n      div.style.right = `${bounds.right}px`;\n    }\n\n    this._markerElement.append(div);\n  }\n\n  private _renderRange(markerLayer: any, session: Ace.EditSession, layerConfig: any, range: Ace.Range): void {\n    const screenRange: Ace.Range = range.toScreenRange(session);\n\n    let height: number = layerConfig.lineHeight;\n    let top: number = markerLayer.$getTop(screenRange.start.row, layerConfig);\n    let width: number = 0;\n    const right = 0;\n    const left: number = markerLayer.$padding + screenRange.start.column * layerConfig.characterWidth;\n\n    if (screenRange.isMultiLine()) {\n      // Render the start line\n      this._renderLine({height, right, top, left});\n\n      // from start of the last line to the selection end\n      top = markerLayer.$getTop(screenRange.end.row, layerConfig);\n      width = screenRange.end.column * layerConfig.characterWidth;\n      this._renderLine({height, width, top, left: markerLayer.$padding});\n\n      // all the complete lines\n      height = (screenRange.end.row - screenRange.start.row - 1) * layerConfig.lineHeight;\n      if (height < 0) {\n        return;\n      }\n      top = markerLayer.$getTop(screenRange.start.row + 1, layerConfig);\n      this._renderLine({height, right, top, left: markerLayer.$padding});\n    } else {\n      width = (range.end.column - range.start.column) * layerConfig.characterWidth;\n      this._renderLine({height, width, top, left});\n    }\n  }\n\n  private _forceSessionUpdate(): void {\n    (this._session as any)._signal(\"changeBackMarker\");\n  }\n}\n","import {Ace} from \"ace-builds\";\nimport {AceSelectionMarker} from \"./AceSelectionMarker\";\n\n/**\n * Implements multiple colored selections in the ace editor.  Each selection is\n * associated with a particular user. Each user is identified by a unique id\n * and has a color associated with them.  The selection manager supports block\n * selection through multiple AceRanges.\n */\nexport class AceMultiSelectionManager {\n\n  private readonly _selections: { [key: string]: AceSelectionMarker };\n  private readonly _session: Ace.EditSession;\n\n  /**\n   * Constructs a new AceMultiSelectionManager that is bound to a particular\n   * Ace EditSession instance.\n   *\n   * @param session\n   *   The Ace EditSession to bind to.\n   */\n  constructor(session: Ace.EditSession) {\n    this._selections = {};\n    this._session = session;\n  }\n\n  /**\n   * Adds a new collaborative selection.\n   *\n   * @param id\n   *   The unique system identifier for the user associated with this selection.\n   * @param label\n   *   A human readable / meaningful label / title that identifies the user.\n   * @param color\n   *   A valid css color string.\n   * @param ranges\n   *   An array of ace ranges that specify the initial selection.\n   */\n  public addSelection(id: string, label: string, color: string, ranges: Ace.Range[]): void {\n    if (this._selections[id] !== undefined) {\n      throw new Error(\"Selection with id already defined: \" + id);\n    }\n\n    const marker = new AceSelectionMarker(this._session, id, label, color, ranges);\n\n    this._selections[id] = marker;\n    this._session.addDynamicMarker(marker, false);\n  }\n\n  /**\n   * Updates the selection for a particular user.\n   *\n   * @param id\n   *   The unique identifier for the user.\n   * @param ranges\n   *   The array of ranges that specify the selection.\n   */\n  public setSelection(id: string, ranges: Ace.Range[]) {\n    const selection = this._getSelection(id);\n\n    selection.setSelection(ranges);\n  }\n\n  /**\n   * Clears the selection (but does not remove it) for the specified user.\n   * @param id\n   *   The unique identifier for the user.\n   */\n  public clearSelection(id: string): void {\n    const selection = this._getSelection(id);\n\n    selection.setSelection(null);\n  }\n\n  /**\n   * Removes the selection for the specified user.\n   * @param id\n   *   The unique identifier for the user.\n   */\n  public removeSelection(id: string) {\n    const selection = this._selections[id];\n\n    if (selection === undefined) {\n      throw new Error(\"Selection not found: \" + id);\n    }\n\n    // note: ace adds the id property to whatever marker you pass in.\n    this._session.removeMarker((selection as any).id);\n    delete this._selections[id];\n  }\n\n  /**\n   * Removes all selections.\n   */\n  public removeAll(): void {\n    Object.getOwnPropertyNames(this._selections).forEach((key) => {\n      this.removeSelection(this._selections[key].selectionId());\n    });\n  }\n\n  private _getSelection(id: string): AceSelectionMarker {\n    const selection: AceSelectionMarker = this._selections[id];\n\n    if (selection === undefined) {\n      throw new Error(\"Selection not found: \" + id);\n    }\n    return selection;\n  }\n}\n","import {Ace} from \"ace-builds\";\n\n/**\n * Represents a marker of a remote users cursor.\n */\nexport class AceCursorMarker implements Ace.MarkerLike {\n\n  public range: Ace.Range;\n  public type: string;\n  public renderer?: Ace.MarkerRenderer;\n  public clazz: string;\n  public inFront: boolean;\n  public id: number;\n\n  private readonly _session: Ace.EditSession;\n  private readonly _label: string;\n  private readonly _color: string;\n  private readonly _cursorId: string;\n  private readonly _id: string;\n  private readonly _markerElement: HTMLDivElement;\n  private readonly _cursorElement: HTMLDivElement;\n  private readonly _tooltipElement: HTMLDivElement;\n  private _visible: boolean;\n  private _position: Ace.Point;\n  private _tooltipTimeout: any;\n\n  /**\n   * Constructs a new AceCursorMarker\n   * @param session The Ace Editor Session to bind to.\n   * @param cursorId the unique id of this cursor.\n   * @param label The label to display over the cursor.\n   * @param color The css color of the cursor\n   * @param position The row / column coordinate of the cursor marker.\n   */\n  constructor(session: Ace.EditSession,\n              cursorId: string,\n              label: string,\n              color: string,\n              position: number | Ace.Point) {\n    this._session = session;\n    this._label = label;\n    this._color = color;\n    this._position = position ? this._convertPosition(position) : null;\n    this._cursorId = cursorId;\n    this._id = null;\n    this._visible = false;\n    this._tooltipTimeout = null;\n\n    // Create the HTML elements\n    this._markerElement = document.createElement(\"div\");\n    this._cursorElement = document.createElement(\"div\");\n    this._cursorElement.className = \"ace-multi-cursor\";\n    this._cursorElement.style.background = this._color;\n    this._markerElement.append(this._cursorElement);\n\n    this._tooltipElement = document.createElement(\"div\");\n    this._tooltipElement.className = \"ace-multi-cursor-tooltip\";\n    this._tooltipElement.style.background = this._color;\n    this._tooltipElement.style.opacity = \"0\";\n    this._tooltipElement.innerHTML = label;\n    this._markerElement.append(this._tooltipElement);\n  }\n\n  /**\n   * Called by Ace to update the rendering of the marker.\n   *\n   * @param _ The html to render, represented by an array of strings.\n   * @param markerLayer The marker layer containing the cursor marker.\n   * @param __ The ace edit session.\n   * @param layerConfig\n   */\n  public update(_: string[], markerLayer: any, __: Ace.EditSession, layerConfig: any): void {\n    if (this._position === null) {\n      return;\n    }\n\n    const screenPosition = this._session.documentToScreenPosition(\n      this._position.row, this._position.column);\n\n    const top: number = markerLayer.$getTop(screenPosition.row, layerConfig);\n    const left: number = markerLayer.$padding + screenPosition.column * layerConfig.characterWidth;\n    const height: number = layerConfig.lineHeight;\n\n    const cursorTop = top + 2;\n    const cursorHeight = height - 3;\n    const cursorLeft = left;\n    const cursorWidth = 2;\n\n    this._cursorElement.style.height = `${cursorHeight}px`;\n    this._cursorElement.style.width = `${cursorWidth}px`;\n    this._cursorElement.style.top = `${cursorTop}px`;\n    this._cursorElement.style.left = `${cursorLeft}px`;\n\n    let toolTipTop = cursorTop - height;\n    if (toolTipTop < 5) {\n      toolTipTop = cursorTop + height - 1;\n    }\n\n    const toolTipLeft = cursorLeft;\n    this._tooltipElement.style.top = `${toolTipTop - 2}px`;\n    this._tooltipElement.style.left = `${toolTipLeft - 2}px`;\n\n    // Remove the content node from whatever parent it might have now\n    // and add it to the new parent node.\n    this._markerElement.remove();\n    markerLayer.elt(\"remote-cursor\", \"\");\n    const parentNode = markerLayer.element.childNodes[markerLayer.i - 1] || markerLayer.element.lastChild;\n    parentNode.appendChild(this._markerElement);\n  }\n\n  /**\n   * Sets the location of the cursor marker.\n   * @param position The position of cursor marker.\n   */\n  public setPosition(position: number | Ace.Point): void {\n    this._position = this._convertPosition(position);\n    this._forceSessionUpdate();\n    this._tooltipElement.style.opacity = \"1\";\n    this._scheduleTooltipHide();\n  }\n\n  /**\n   * Sets the marker to visible / invisible.\n   *\n   * @param visible true if the marker should be displayed, false otherwise.\n   */\n  public setVisible(visible: boolean): void {\n    const old = this._visible;\n\n    this._visible = visible;\n    if (old !== this._visible) {\n      this._markerElement.style.visibility = visible ? \"visible\" : \"hidden\";\n      this._forceSessionUpdate();\n    }\n  }\n\n  /**\n   * Determines if the marker should be visible.\n   *\n   * @returns true if the cursor should be visible, false otherwise.\n   */\n  public isVisible(): boolean {\n    return this._visible;\n  }\n\n  /**\n   * Gets the unique id of this cursor.\n   * @returns the unique id of this cursor.\n   */\n  public cursorId(): string {\n    return this._cursorId;\n  }\n\n  /**\n   * Gets the id of the marker.\n   * @returns The marker id.\n   */\n  public markerId(): string {\n    return this._id;\n  }\n\n  /**\n   * Gets the label of the marker.\n   * @returns The marker\"s label.\n   */\n  public getLabel(): string {\n    return this._label;\n  }\n\n  private _forceSessionUpdate(): void {\n    (this._session as any)._signal(\"changeFrontMarker\");\n  }\n\n  private _convertPosition(position: number | Ace.Point): Ace.Point {\n    if (position === null) {\n      return null;\n    } else if (typeof position === \"number\") {\n      return this._session.getDocument().indexToPosition(position, 0);\n    } else if (typeof position.row === \"number\" && typeof position.column === \"number\") {\n      return position;\n    }\n\n    throw new Error(`Invalid position: ${position}`);\n  }\n\n  private _scheduleTooltipHide(): void {\n    if (this._tooltipTimeout !== null) {\n      clearTimeout(this._tooltipTimeout);\n    }\n\n    this._tooltipTimeout = setTimeout(() => {\n      this._tooltipElement.style.opacity = \"0\";\n      this._tooltipTimeout = null;\n    }, 2000);\n  }\n}\n","import {Ace} from \"ace-builds\";\nimport {AceCursorMarker} from \"./AceCursorMarker\";\n\n/**\n * Implements multiple colored cursors in the ace editor.  Each cursor is\n * associated with a particular user. Each user is identified by a unique id\n * and has a color associated with them.  Each cursor has a position in the\n * editor which is specified by a 2-d row and column ({row: 0, column: 10}).\n */\nexport class AceMultiCursorManager {\n\n  private readonly _cursors: { [key: string]: AceCursorMarker };\n  private readonly _session: Ace.EditSession;\n\n  /**\n   * Constructs a new AceMultiCursorManager that is bound to a particular\n   * Ace EditSession instance.\n   *\n   * @param session\n   *   The Ace EditSession to bind to.\n   */\n  constructor(session: Ace.EditSession) {\n    this._cursors = {};\n    this._session = session;\n  }\n\n  /**\n   * Adds a new collaborative selection.\n   *\n   * @param id\n   *   The unique system identifier for the user associated with this selection.\n   * @param label\n   *   A human readable / meaningful label / title that identifies the user.\n   * @param color\n   *   A valid css color string.\n   * @param position\n   *   A 2-d position or linear index indicating the location of the cursor.\n   */\n  public addCursor(id: string, label: string, color: string, position: number | Ace.Point): void {\n    if (this._cursors[id] !== undefined) {\n      throw new Error(`Cursor with id already defined: ${id}`);\n    }\n\n    const marker: AceCursorMarker = new AceCursorMarker(this._session, id, label, color, position);\n\n    this._cursors[id] = marker;\n    this._session.addDynamicMarker(marker, true);\n  }\n\n  /**\n   * Updates the selection for a particular user.\n   *\n   * @param id\n   *   The unique identifier for the user.\n   * @param position\n   *   A 2-d position or linear index indicating the location of the cursor.\n   */\n  public setCursor(id: string, position: number | Ace.Point): void {\n    const cursor: AceCursorMarker = this._getCursor(id);\n\n    cursor.setPosition(position);\n  }\n\n  /**\n   * Clears the cursor (but does not remove it) for the specified user.\n   *\n   * @param id\n   *   The unique identifier for the user.\n   */\n  public clearCursor(id: string): void {\n    const cursor = this._getCursor(id);\n\n    cursor.setPosition(null);\n  }\n\n  /**\n   * Removes the cursor for the specified user.\n   *\n   * @param id\n   *   The unique identifier for the user.\n   */\n  public removeCursor(id: string): void {\n    const cursor = this._cursors[id];\n\n    if (cursor === undefined) {\n      throw new Error(`Cursor not found: ${id}`);\n    }\n    // Note: ace adds an id field to all added markers.\n    this._session.removeMarker((cursor as any).id);\n    delete this._cursors[id];\n  }\n\n  /**\n   * Removes all cursors.\n   */\n  public removeAll(): void {\n    Object.getOwnPropertyNames(this._cursors).forEach((key) => {\n      this.removeCursor(this._cursors[key].cursorId());\n    });\n  }\n\n  private _getCursor(id: string): AceCursorMarker {\n    const cursor: AceCursorMarker = this._cursors[id];\n\n    if (cursor === undefined) {\n      throw new Error(`Cursor not found: ${id}`);\n    }\n    return cursor;\n  }\n}\n","import {Ace, Range} from \"ace-builds\";\n\nexport interface IRangeData {\n  start: {row: number, column: number};\n  end: {row: number, column: number};\n}\n\n/**\n * A helper class for working with Ace Ranges.\n */\nexport class AceRangeUtil {\n\n  public static rangeToJson(range: Ace.Range): IRangeData {\n    return {\n      start: {\n        row: range.start.row,\n        column: range.start.column\n      },\n      end: {\n        row: range.end.row,\n        column: range.end.column\n      }\n    };\n  }\n\n  public static jsonToRange(range: IRangeData): Ace.Range {\n    return new Range(\n      range.start.row,\n      range.start.column,\n      range.end.row,\n      range.end.column);\n  }\n\n  public static rangesToJson(ranges: Ace.Range[]): IRangeData[] {\n    return ranges.map((range) => {\n      return AceRangeUtil.rangeToJson(range);\n    });\n  }\n\n  public static jsonToRanges(ranges: IRangeData[]): Ace.Range[] {\n    return ranges.map((range) => {\n      return AceRangeUtil.jsonToRange(range);\n    });\n  }\n\n  public static toJson(value: Ace.Range): IRangeData;\n  public static toJson(value: Ace.Range[]): IRangeData[];\n  public static toJson(value: Ace.Range | Ace.Range[]) {\n    if (Array.isArray(value)) {\n      return AceRangeUtil.rangesToJson(value);\n    }\n\n    return AceRangeUtil.rangeToJson(value);\n  }\n\n  public static fromJson(value: IRangeData): Ace.Range;\n  public static fromJson(value: IRangeData[]): Ace.Range[];\n  public static fromJson(value: IRangeData | IRangeData[]): Ace.Range | Ace.Range[] {\n    if (Array.isArray(value)) {\n      return AceRangeUtil.jsonToRanges(value);\n    }\n\n    return AceRangeUtil.jsonToRange(value);\n  }\n}\n","import {Ace} from \"ace-builds\";\nimport {IRowRange} from \"./RowRange\";\n\nexport class AceRadarViewIndicator {\n\n  private readonly _label: string;\n  private readonly _color: string;\n  private readonly _editorListener: () => void;\n  private readonly _scrollElement: HTMLDivElement;\n  private readonly _cursorElement: HTMLDivElement;\n  private readonly _wrapper: HTMLDivElement;\n  private _viewRows: IRowRange;\n  private _cursorRow: number;\n  private _editor: Ace.Editor;\n  private _docLineCount: number;\n\n  constructor(label: string, color: string, viewRows: IRowRange, cursorRow: number, editor: Ace.Editor) {\n    this._label = label;\n    this._color = color;\n    this._viewRows = viewRows;\n    this._cursorRow = cursorRow;\n    this._editor = editor;\n    this._docLineCount = editor.getSession().getLength();\n\n    this._editorListener = () => {\n      const newLineCount = this._editor.getSession().getLength();\n\n      if (newLineCount !== this._docLineCount) {\n        this._docLineCount = newLineCount;\n        this.update();\n      }\n    };\n    this._editor.on(\"change\", this._editorListener);\n\n    this._scrollElement = document.createElement(\"div\");\n    this._scrollElement.className = \"ace-radar-view-scroll-indicator\";\n\n    this._scrollElement.style.borderColor = this._color;\n    this._scrollElement.style.background = this._color;\n\n    // todo implement a custom tooltip for consistent presentation.\n    this._scrollElement.title = this._label;\n\n    this._scrollElement.addEventListener(\"click\", () => {\n      const middle = ((this._viewRows.end - this._viewRows.start) / 2) + this._viewRows.start;\n\n      this._editor.scrollToLine(middle, true, false, () => { /* no-op */\n      });\n    }, false);\n\n    this._cursorElement = document.createElement(\"div\");\n    this._cursorElement.className = \"ace-radar-view-cursor-indicator\";\n    this._cursorElement.style.background = this._color;\n    this._cursorElement.title = this._label;\n\n    this._cursorElement.addEventListener(\"click\", () => {\n      this._editor.scrollToLine(this._cursorRow, true, false, () => { /* no-op */\n      });\n    }, false);\n\n    this._wrapper = document.createElement(\"div\");\n    this._wrapper.className = \"ace-radar-view-wrapper\";\n    this._wrapper.style.display = \"none\";\n\n    this._wrapper.appendChild(this._scrollElement);\n    this._wrapper.appendChild(this._cursorElement);\n  }\n\n  public element(): HTMLDivElement {\n    return this._wrapper;\n  }\n\n  public setCursorRow(cursorRow: number): void {\n    this._cursorRow = cursorRow;\n    this.update();\n  }\n\n  public setViewRows(viewRows: IRowRange): void {\n    this._viewRows = viewRows;\n    this.update();\n  }\n\n  public update(): void {\n    if (!_isSet(this._viewRows) && !_isSet(this._cursorRow)) {\n      this._wrapper.style.display = \"none\";\n    } else {\n      this._wrapper.style.display = null;\n      const maxLine = this._docLineCount - 1;\n\n      if (!_isSet(this._viewRows)) {\n        this._scrollElement.style.display = \"none\";\n      } else {\n        const topPercent = Math.min(maxLine, this._viewRows.start) / maxLine * 100;\n        const bottomPercent = 100 - (Math.min(maxLine, this._viewRows.end) / maxLine * 100);\n\n        this._scrollElement.style.top = topPercent + \"%\";\n        this._scrollElement.style.bottom = bottomPercent + \"%\";\n        this._scrollElement.style.display = null;\n      }\n\n      if (!_isSet(this._cursorRow)) {\n        this._cursorElement.style.display = \"none\";\n      } else {\n        const cursorPercent = Math.min(this._cursorRow, maxLine) / maxLine;\n        const ratio = (this._wrapper.offsetHeight - this._cursorElement.offsetHeight) / this._wrapper.offsetHeight;\n        const cursorTop = cursorPercent * ratio * 100;\n\n        this._cursorElement.style.top = cursorTop + \"%\";\n        this._cursorElement.style.display = null;\n      }\n    }\n  }\n\n  public dispose(): void {\n    this._wrapper.parentNode.removeChild(this._wrapper);\n    this._editor.off(\"change\", this._editorListener);\n  }\n}\n\nfunction _isSet(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n","import {Ace} from \"ace-builds\";\nimport {AceRadarViewIndicator} from \"./AceRadarViewIndicator\";\nimport {IRowRange} from \"./RowRange\";\n\n/**\n * Implements viewport awareness in the Ace Editor by showing where remote\n * users are scrolled too and where there cursor is in the document, even\n * if the cursor is not in view.\n */\nexport class AceRadarView {\n  private readonly _views: { [key: string]: AceRadarViewIndicator };\n  private readonly _editor: Ace.Editor;\n  private _container: HTMLElement;\n\n  /**\n   * Constructs a new AceRadarView bound to the supplied element and editor.\n   *\n   * @param element\n   *          The HTML Element that the AceRadarView should render to.\n   * @param editor\n   *          The Ace Editor to listen to events from.\n   */\n  constructor(element: HTMLElement | string, editor: Ace.Editor) {\n    this._container = null;\n    if (typeof element === \"string\") {\n      this._container = document.getElementById(element);\n    } else {\n      this._container = element;\n    }\n\n    this._container.style.position = \"relative\";\n    this._views = {};\n    this._editor = editor;\n  }\n\n  /**\n   * Add a view indicator for a new remote user.\n   *\n   * @param id\n   *          The unique id of the user.\n   * @param label\n   *          A text label to displAce for the user.\n   * @param color\n   *          The color to render the indicator with.\n   * @param viewRows\n   *          The rows the user's viewport spans.\n   * @param cursorRow\n   *          The row that the user's cursor is on.\n   */\n  public addView(id: string, label: string, color: string, viewRows: IRowRange, cursorRow: number) {\n    const indicator = new AceRadarViewIndicator(\n      label,\n      color,\n      viewRows,\n      cursorRow,\n      this._editor\n    );\n\n    this._container.appendChild(indicator.element());\n    indicator.update();\n\n    this._views[id] = indicator;\n  }\n\n  /**\n   * Determines if the AceRadarView has an indicator for this specified user.\n   *\n   * @param id\n   *          The id of the user to check for.\n   * @returns\n   *   True if the AceRadarView has an indicator for this user, false otherwise.\n   */\n  public hasView(id: string): boolean {\n    return this._views[id] !== undefined;\n  }\n\n  /**\n   * Sets the view row span for a particular user.\n   *\n   * @param id\n   *          The id of the user to set the rows for.\n   * @param rows\n   *          The row range to set.\n   */\n  public setViewRows(id: string, rows: IRowRange) {\n    const indicator = this._views[id];\n    indicator.setViewRows(rows);\n  }\n\n  /**\n   * Sets the cursor row for a particular user.\n   *\n   * @param id\n   *          The id of the user to set the cursor row for.\n   * @param row\n   *          The row to set.\n   */\n  public setCursorRow(id: string, row: number) {\n    const indicator = this._views[id];\n    indicator.setCursorRow(row);\n  }\n\n  /**\n   * Clears the view for a particular user, causing their indicator to disapear.\n   * @param id\n   *   The id of the user to clear.\n   */\n  public clearView(id: string): void {\n    const indicator = this._views[id];\n    indicator.setCursorRow(null);\n    indicator.setViewRows(null);\n  }\n\n  /**\n   * Removes the view indicator for the specified user.\n   * @param id\n   *   The id of the user to remove the view indicator for.\n   */\n  public removeView(id: string): void {\n    const indicator = this._views[id];\n    indicator.dispose();\n    delete this._views[id];\n  }\n}\n","import {Ace} from \"ace-builds\";\nimport {IIndexRange} from \"./IndexRange\";\nimport {IRowRange} from \"./RowRange\";\n\nexport class AceViewportUtil {\n\n  public static getVisibleIndexRange(editor: Ace.Editor): IIndexRange {\n    let firstRow: number = editor.getFirstVisibleRow();\n    let lastRow: number = editor.getLastVisibleRow();\n\n    if (!editor.isRowFullyVisible(firstRow)) {\n      firstRow++;\n    }\n\n    if (!editor.isRowFullyVisible(lastRow)) {\n      lastRow--;\n    }\n\n    const startPos: number = editor.getSession().getDocument().positionToIndex({row: firstRow, column: 0}, 0);\n\n    // todo, this should probably be the end of the row\n    const endPos: number = editor.getSession().getDocument().positionToIndex({row: lastRow, column: 0}, 0);\n\n    return {\n      start: startPos,\n      end: endPos\n    };\n  }\n\n  public static indicesToRows(editor: Ace.Editor, startIndex: number, endIndex: number): IRowRange {\n    const startRow: number = editor.getSession().getDocument().indexToPosition(startIndex, 0).row;\n    const endRow: number = editor.getSession().getDocument().indexToPosition(endIndex, 0).row;\n\n    return {\n      start: startRow,\n      end: endRow\n    };\n  }\n}\n"],"names":["session","selectionId","label","color","ranges","this","_session","_label","_color","_ranges","_selectionId","_id","_markerElement","document","createElement","AceSelectionMarker","_","markerLayer","layerConfig","hasChildNodes","removeChild","lastChild","forEach","range","_this","_renderRange","remove","elt","element","childNodes","i","appendChild","Array","_forceSessionUpdate","bounds","div","className","style","backgroundColor","height","width","top","left","bottom","right","append","screenRange","toScreenRange","lineHeight","$getTop","start","row","$padding","column","characterWidth","isMultiLine","_renderLine","end","_signal","_selections","AceMultiSelectionManager","id","undefined","Error","marker","addDynamicMarker","_getSelection","setSelection","selection","removeMarker","Object","getOwnPropertyNames","key","removeSelection","cursorId","position","_position","_convertPosition","_cursorId","_visible","_tooltipTimeout","_cursorElement","background","_tooltipElement","opacity","innerHTML","AceCursorMarker","__","screenPosition","documentToScreenPosition","cursorTop","cursorHeight","cursorLeft","cursorWidth","toolTipTop","toolTipLeft","_scheduleTooltipHide","visible","old","visibility","getDocument","indexToPosition","clearTimeout","setTimeout","_cursors","AceMultiCursorManager","_getCursor","setPosition","cursor","removeCursor","AceRangeUtil","Range","map","rangeToJson","jsonToRange","value","isArray","rangesToJson","jsonToRanges","viewRows","cursorRow","editor","_viewRows","_cursorRow","_editor","_docLineCount","getSession","getLength","_editorListener","newLineCount","update","on","_scrollElement","borderColor","title","addEventListener","middle","scrollToLine","_wrapper","display","AceRadarViewIndicator","_isSet","maxLine","topPercent","Math","min","bottomPercent","offsetHeight","parentNode","off","_container","getElementById","_views","AceRadarView","indicator","rows","setViewRows","setCursorRow","dispose","AceViewportUtil","firstRow","getFirstVisibleRow","lastRow","getLastVisibleRow","isRowFullyVisible","positionToIndex","startIndex","endIndex"],"mappings":"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"}